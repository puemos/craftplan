defmodule Craftplan.Repo.Migrations.ChangeIdentities do
  @moduledoc """
  Updates resources based on their most recent snapshots.

  This file was autogenerated with `mix ash_postgres.generate_migrations`
  """

  use Ecto.Migration

  def up do
    drop_if_exists unique_index(:inventory_materials, [:name],
                     name: "inventory_materials_unique_name_index"
                   )

    drop_if_exists unique_index(:inventory_materials, [:sku],
                     name: "inventory_materials_unique_sku_index"
                   )

    create unique_index(:inventory_materials, [:name], name: "inventory_materials_name_index")

    create unique_index(:inventory_materials, [:sku], name: "inventory_materials_sku_index")

    alter table(:inventory_allergens) do
      modify :name, :text, null: false
    end

    drop_if_exists unique_index(:inventory_allergens, [:name],
                     name: "inventory_allergens_unique_name_index"
                   )

    create unique_index(:inventory_allergens, [:name], name: "inventory_allergens_name_index")

    drop_if_exists unique_index(:catalog_products, [:name],
                     name: "catalog_products_unique_name_index"
                   )

    drop_if_exists unique_index(:catalog_products, [:sku],
                     name: "catalog_products_unique_sku_index"
                   )

    create unique_index(:catalog_products, [:name], name: "catalog_products_name_index")

    create unique_index(:catalog_products, [:sku], name: "catalog_products_sku_index")
  end

  def down do
    drop_if_exists unique_index(:catalog_products, [:sku], name: "catalog_products_sku_index")

    drop_if_exists unique_index(:catalog_products, [:name], name: "catalog_products_name_index")

    create unique_index(:catalog_products, [:sku], name: "catalog_products_unique_sku_index")

    create unique_index(:catalog_products, [:name], name: "catalog_products_unique_name_index")

    drop_if_exists unique_index(:inventory_allergens, [:name],
                     name: "inventory_allergens_name_index"
                   )

    create unique_index(:inventory_allergens, [:name],
             name: "inventory_allergens_unique_name_index"
           )

    alter table(:inventory_allergens) do
      modify :name, :text, null: true
    end

    drop_if_exists unique_index(:inventory_materials, [:sku],
                     name: "inventory_materials_sku_index"
                   )

    drop_if_exists unique_index(:inventory_materials, [:name],
                     name: "inventory_materials_name_index"
                   )

    create unique_index(:inventory_materials, [:sku],
             name: "inventory_materials_unique_sku_index"
           )

    create unique_index(:inventory_materials, [:name],
             name: "inventory_materials_unique_name_index"
           )
  end
end
