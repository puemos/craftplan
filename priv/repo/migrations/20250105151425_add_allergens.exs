defmodule Craftplan.Repo.Migrations.AddAllergens do
  @moduledoc """
  Updates resources based on their most recent snapshots.

  This file was autogenerated with `mix ash_postgres.generate_migrations`
  """

  use Ecto.Migration

  def up do
    create table(:inventory_material_allergen, primary_key: false) do
      add :material_id,
          references(:inventory_materials,
            column: :id,
            name: "inventory_material_allergen_material_id_fkey",
            type: :uuid,
            prefix: "public"
          ),
          primary_key: true,
          null: false

      add :allergen_id, :uuid, null: false, primary_key: true
    end

    create table(:inventory_allergens, primary_key: false) do
      add :id, :uuid, null: false, default: fragment("gen_random_uuid()"), primary_key: true
    end

    alter table(:inventory_material_allergen) do
      modify :allergen_id,
             references(:inventory_allergens,
               column: :id,
               name: "inventory_material_allergen_allergen_id_fkey",
               type: :uuid,
               prefix: "public"
             )
    end

    alter table(:inventory_allergens) do
      add :name, :text

      add :inserted_at, :utc_datetime_usec,
        null: false,
        default: fragment("(now() AT TIME ZONE 'utc')")

      add :updated_at, :utc_datetime_usec,
        null: false,
        default: fragment("(now() AT TIME ZONE 'utc')")
    end
  end

  def down do
    alter table(:inventory_allergens) do
      remove :updated_at
      remove :inserted_at
      remove :name
    end

    drop constraint(:inventory_material_allergen, "inventory_material_allergen_allergen_id_fkey")

    alter table(:inventory_material_allergen) do
      modify :allergen_id, :uuid
    end

    drop table(:inventory_allergens)

    drop constraint(:inventory_material_allergen, "inventory_material_allergen_material_id_fkey")

    drop table(:inventory_material_allergen)
  end
end
