defmodule Craftday.Repo.Migrations.AddSuppliersPosAndItems do
  @moduledoc """
  Updates resources based on their most recent snapshots.

  This file was autogenerated with `mix ash_postgres.generate_migrations`
  """

  use Ecto.Migration

  def up do
    create table(:inventory_suppliers, primary_key: false) do
      add :id, :uuid, null: false, default: fragment("gen_random_uuid()"), primary_key: true
      add :name, :text, null: false
      add :contact_name, :text
      add :contact_email, :text
      add :contact_phone, :text
      add :notes, :text

      add :inserted_at, :utc_datetime_usec,
        null: false,
        default: fragment("(now() AT TIME ZONE 'utc')")

      add :updated_at, :utc_datetime_usec,
        null: false,
        default: fragment("(now() AT TIME ZONE 'utc')")
    end

    create table(:inventory_purchase_orders, primary_key: false) do
      add :id, :uuid, null: false, default: fragment("gen_random_uuid()"), primary_key: true
      add :reference, :text, null: false
      add :status, :text, null: false, default: "draft"
      add :ordered_at, :utc_datetime
      add :received_at, :utc_datetime

      add :inserted_at, :utc_datetime_usec,
        null: false,
        default: fragment("(now() AT TIME ZONE 'utc')")

      add :updated_at, :utc_datetime_usec,
        null: false,
        default: fragment("(now() AT TIME ZONE 'utc')")

      add :supplier_id,
          references(:inventory_suppliers,
            column: :id,
            name: "inventory_purchase_orders_supplier_id_fkey",
            type: :uuid,
            prefix: "public"
          ),
          null: false
    end

    create unique_index(:inventory_purchase_orders, [:reference],
             name: "inventory_purchase_orders_reference_index"
           )

    create table(:inventory_purchase_order_items, primary_key: false) do
      add :id, :uuid, null: false, default: fragment("gen_random_uuid()"), primary_key: true
      add :quantity, :decimal, null: false, default: "0"
      add :unit_price, :decimal

      add :inserted_at, :utc_datetime_usec,
        null: false,
        default: fragment("(now() AT TIME ZONE 'utc')")

      add :updated_at, :utc_datetime_usec,
        null: false,
        default: fragment("(now() AT TIME ZONE 'utc')")

      add :purchase_order_id,
          references(:inventory_purchase_orders,
            column: :id,
            name: "inventory_purchase_order_items_purchase_order_id_fkey",
            type: :uuid,
            prefix: "public"
          ),
          null: false

      add :material_id,
          references(:inventory_materials,
            column: :id,
            name: "inventory_purchase_order_items_material_id_fkey",
            type: :uuid,
            prefix: "public"
          ),
          null: false
    end
  end

  def down do
    drop constraint(
           :inventory_purchase_order_items,
           "inventory_purchase_order_items_purchase_order_id_fkey"
         )

    drop constraint(
           :inventory_purchase_order_items,
           "inventory_purchase_order_items_material_id_fkey"
         )

    drop table(:inventory_purchase_order_items)

    drop_if_exists unique_index(:inventory_purchase_orders, [:reference],
                     name: "inventory_purchase_orders_reference_index"
                   )

    drop constraint(:inventory_purchase_orders, "inventory_purchase_orders_supplier_id_fkey")

    drop table(:inventory_purchase_orders)

    drop table(:inventory_suppliers)
  end
end
